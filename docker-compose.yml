services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: book_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: book_management_meta
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  backend:
    build: ./backend
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: production
      POSTGRES_HOST: postgres
      POSTGRES_DB: book_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      MONGODB_URI: mongodb://mongodb:27017/book_management_meta
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_GRAPHQL_URL: http://backend:4000/graphql
      BACKEND_URL: http://backend:4000
    depends_on:
      - backend

volumes:
  postgres_data:
  mongodb_data:
